{"version":3,"file":"component---src-pages-404-js-d4889b82256097a46886.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/pages/404.js","webpack://gatsby-starter-blog/./src/components/layout.js","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\n\nconst Layout = ({ location, title, children }) => {\n  const rootPath = `${__PATH_PREFIX__}/`\n  const isRootPath = location.pathname === rootPath\n  let header\n\n  if (isRootPath) {\n    header = (\n      <div>\n      <h1 className=\"main-heading\">\n        <Link to=\"/\">tak. 7.</Link>\n      <ul className=\"ul-header\">\n      <li className=\"heading-menu-li\">\n        <Link className=\"heading-menu-a\" to=\"/contact\">CONTACT</Link>\n      </li>\n      <li className=\"heading-menu-li\">\n        <Link className=\"heading-menu-a\" to=\"/about\">ABOUT</Link>\n      </li>\n      <li className=\"heading-menu-li\">\n        <Link className=\"heading-menu-a\" to=\"/works\">WORKS</Link>\n      </li>\n      </ul>\n      </h1>\n      </div>\n    )\n  } else {\n    header = (\n      <div>\n      <h1 className=\"main-headingatblog\">\n        <Link to=\"/\">tak. 7.</Link>\n      <ul className=\"ul-header\">\n      <li className=\"heading-menu-li\">\n        <Link className=\"heading-menu-a\" to=\"/contact\">CONTACT</Link>\n      </li>\n      <li className=\"heading-menu-li\">\n        <Link className=\"heading-menu-a\" to=\"/about\">ABOUT</Link>\n      </li>\n      <li className=\"heading-menu-li\">\n        <Link className=\"heading-menu-a\" to=\"/works\">WORKS</Link>\n      </li>\n      {/* <li className=\"heading-menu-li\">\n        <Link className=\"heading-menu-a\" to=\"/interests\">INTERESTS</Link>\n      </li> */}\n      {/* <li className=\"heading-menu-li\">\n        <Link className=\"heading-menu-a\" to=\"/\">HOME</Link>\n      </li> */}\n      </ul>\n      </h1>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"global-wrapper\" data-is-root-path={isRootPath}>\n      <header className=\"global-header\">{header}</header>\n      <main>{children}</main>\n      <footer className=\"copyright-footer\">\n        Copyright Â© 2025 Nanahara Takanori.\n      </footer>\n    </div>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","location","siteTitle","site","siteMetadata","Layout","children","isRootPath","pathname","header","className","Link","to","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","useStaticQuery","metaDescription","defaultTitle","name","content","property","social","twitter"],"sourceRoot":""}