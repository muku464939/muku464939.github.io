{"version":3,"file":"component---src-pages-index-js-d14832d9213b2a44303a.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"auto\", \"webp\", \"avif\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={100}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <p>\n          {author.name}<br></br> {author?.summary || null}\n          {` `}\n          {/* <a href={`https://twitter.com/${social?.twitter || ``}`} target=\"_blank\">\n            Twitter\n          </a>\n          はこちら */}\n        </p>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst IndexPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const blogPosts = data.blogPosts.nodes\n  const newsPosts = data.newsPosts.nodes\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <title>Tak-7 | 七原宇紀 公式ウェブサイト</title>\n      <Bio />\n\n\n      {/* News Posts Section */}\n      <section>\n        <h1 className=\"h1-scrollboxtitle\">News</h1>\n        <div className=\"scroll-box\">\n          <ol style={{ listStyle: \"none\", margin: 0, padding: 0 }}>\n            {newsPosts.map((post, index) => {\n              const title = post.frontmatter.title || post.fields.slug;\n              const isLast = index === newsPosts.length - 1;\n              return (\n                <li key={post.fields.slug}>\n                  <Link\n                    to={post.fields.slug}\n                    itemProp=\"url\"\n                    className=\"post-link-wrapper\"\n                    style={{ display: \"block\", color: \"inherit\", textDecoration: \"none\" }}\n                  >\n                    <article\n                      className={`post-list-item${isLast ? \" no-border\" : \"\"}`}\n                      itemScope\n                      itemType=\"http://schema.org/Article\"\n                    >\n                      <header>\n                        <h2>\n                          <span itemProp=\"headline\">{title}</span>\n                        </h2>\n                        <small>{post.frontmatter.date}</small>\n                      </header>\n                      <section>\n                        <p\n                          dangerouslySetInnerHTML={{\n                            __html: post.frontmatter.description || post.excerpt,\n                          }}\n                          itemProp=\"description\"\n                        />\n                      </section>\n                    </article>\n                  </Link>\n                </li>\n              );\n            })}\n          </ol>\n        </div>\n      </section>\n\n      {/* Blog Posts Section */}\n      <section>\n        <h1 className=\"h1-scrollboxtitle\"> Blog Posts</h1>\n        <div className=\"scroll-box\">\n          <ol style={{ listStyle: \"none\", margin: 0, padding: 0 }}>\n            {blogPosts.map((post, index) => {\n              const title = post.frontmatter.title || post.fields.slug;\n              const isLast = index === blogPosts.length - 1;\n            \n              return (\n                <li key={post.fields.slug}>\n                  <Link\n                    to={post.fields.slug}\n                    itemProp=\"url\"\n                    className=\"post-link-wrapper\"\n                    style={{ display: \"block\", color: \"inherit\", textDecoration: \"none\" }}\n                  >\n                    <article\n                      className={`post-list-item${isLast ? \" no-border\" : \"\"}`}\n                      itemScope\n                      itemType=\"http://schema.org/Article\"\n                    >\n                      <header>\n                        <h2>\n                          <span itemProp=\"headline\">{title}</span>\n                        </h2>\n                        <small>{post.frontmatter.date}</small>\n                      </header>\n                      <section>\n                        <p\n                          dangerouslySetInnerHTML={{\n                            __html: post.frontmatter.description || post.excerpt,\n                          }}\n                          itemProp=\"description\"\n                        />\n                      </section>\n                    </article>\n                  </Link>\n                </li>\n              );\n            })}\n          </ol>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n\nexport const Head = () => <Seo title=\"Home\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    blogPosts: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/content/blog/\" } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n    newsPosts: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/content/news/\" } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["Bio","_data$site$siteMetada","_data$site$siteMetada2","data","useStaticQuery","author","site","siteMetadata","social","React","className","StaticImage","layout","formats","src","width","height","quality","alt","__imageData","require","name","summary","_ref","location","siteTitle","title","blogPosts","nodes","newsPosts","Layout","style","listStyle","margin","padding","map","post","index","frontmatter","fields","slug","isLast","length","key","Link","to","itemProp","display","color","textDecoration","itemScope","itemType","date","dangerouslySetInnerHTML","__html","description","excerpt","Head","Seo"],"sourceRoot":""}